#BlueJ class context
comment0.params=shopName
comment0.target=Shop(java.lang.String)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Shop\n\ \n\ @param\ <code>shopName</code>\ a\ <code>String</code>\ object.Name\ of\ the\ shop.\n
comment1.params=
comment1.target=void\ reloadSystem()
comment1.text=\n\ Method\ allowing\ the\ system\ to\ load\ all\ the\ information\ when\ system\ is\ open.\n\ Reads\ and\ fills\ the\ <code>customerMap</code>\ and\ <code>itemReservationMap</code>\ from\ text\n\ files\ named\ as\ the\ <Code>String</code>s\ hold\ in\ <code>dumpCustomerDataFileName</code>\n\ and\ <code>dumpItemReservationDataFileName</code>\ respectively.\n
comment10.params=prefix\ length
comment10.target=java.lang.String\ generateCustomerID(java.lang.String,\ int)
comment10.text=\n\ Generates\ the\ <code>customerID</code>\ field\ value\ of\ the\ <code>Customer</code>\ object\n
comment11.params=
comment11.target=java.lang.String\ generateReservationNo()
comment11.text=\n\ Generates\ the\ <code>reservationNo</code>\ field\ value\ of\ the\ <code>ShopItemReservation</code>\ object\n
comment12.params=itemCode
comment12.target=ShopItem\ getItem(java.lang.String)
comment12.text=\n\ Get\ item\ by\ its\ key\ <code>itemCode</code>\n\n\ @param\ \ \ <code>item</code>\ an\ <code>ShopItem</code>\ object,\ the\ \n\ item\ to\ be\ found\ by\ its\ key\n
comment13.params=customerID
comment13.target=Customer\ getCustomer(java.lang.String)
comment13.text=\n\ Get\ customer\ by\ its\ key\ <code>customerID</code>\n\n\ @param\ \ \ <code>customer</code>\ an\ <code>Customer</code>\ object,\ the\ \n\ item\ to\ be\ found\ by\ its\ key\n
comment14.params=reservationNo
comment14.target=ShopItemReservation\ getItemReservation(java.lang.String)
comment14.text=\n\ Get\ reservation\ by\ its\ key\ <code>reservationNo</code>\n\n\ @param\ \ \ <code>reservation</code>\ an\ <code>ShopItemReservation</code>\ object,\ the\ \n\ reservation\ to\ be\ found\ by\ its\ key\n
comment15.params=
comment15.target=void\ clearItemMap()
comment15.text=\n\ Remove\ all\ items\ from\ itemMap\n
comment16.params=
comment16.target=void\ clearCustomerMap()
comment16.text=\n\ Remove\ all\ customers\ from\ customerMap\n
comment17.params=
comment17.target=void\ clearReservationMap()
comment17.text=\n\ Remove\ all\ reservations\ from\ itemReservationMap\n
comment18.params=itemCode
comment18.target=void\ removeItem(java.lang.String)
comment18.text=\n\ Remove\ item\ from\ the\ itemMap\n\n
comment19.params=customerID
comment19.target=void\ removeCustomer(java.lang.String)
comment19.text=\n\ Remove\ customer\ from\ the\ customerMap\n\n
comment2.params=
comment2.target=void\ closeDownSystem()
comment2.text=\n\ Method\ allowing\ the\ system\ to\ save\ all\ the\ information\ when\ system\ is\ closed.\n\ Write\ down\ the\ <code>customerMap</code>\ and\ <code>itemReservationMap</code>\ as\ text\n\ files\ named\ as\ the\ <Code>String</code>\ hold\ in\ <code>dumpCustomerDataFileName</code>\n\ and\ <code>dumpItemReservationDataFileName</code>\ respectively.\n
comment20.params=reservationNo
comment20.target=void\ deleteItemReservation(java.lang.String)
comment20.text=\n\ Remove\ reservation\ from\ the\ itemReservationMap\n\n
comment21.params=
comment21.target=void\ printItemDetails()
comment21.text=\n\ Printing\ the\ details\ of\ all\ items\ object\ from\ the\ itemMap.\ \ \n
comment22.params=
comment22.target=void\ printCustomerDetails()
comment22.text=\n\ Printing\ the\ details\ of\ all\ customer\ objects\ from\ the\ customerMap.\ \ \n
comment23.params=
comment23.target=void\ printItemReservation()
comment23.text=\n\ Printing\ the\ details\ of\ all\ reservation\ objects\ from\ the\ customerMap.\ \ \n
comment24.params=startDate\ endDate
comment24.target=void\ printDiaryEntries(java.lang.String,\ java.lang.String)
comment24.text=\n\ Printing\ the\ details\ of\ the\ <code>Diary</code>\ object.\ \ \n
comment25.params=
comment25.target=void\ writeCustomerData()
comment25.text=\n\ Opens\ <code>fileName</code>\ a\ <code>FileDialog</code>\ object\ with\ an\ absolute\ file\ path.\n\ The\ open\ file\ is\ passed\ to\ the\ <code>writeCustomerData()</code>\ as\ parameter.\n
comment26.params=fileName
comment26.target=void\ writeCustomerData(java.lang.String)
comment26.text=\n\ Writes\ customer\ data\ to\ a\ file\n\ \n\ @parem\ \ <code>fileName</code>\ a\ <code>String</code>\ the\ name\ of\n\ \ \ \ \ \ \ \ \ the\ text\ file\ in\ which\ the\ data\ will\ be\ stored.\n\ \ \ \ \ \ \ \ \ \n\ @catch\ FileNotFoundException\n
comment27.params=
comment27.target=void\ writeItemReservationData()
comment27.text=\n\ Opens\ <code>fileName</code>\ a\ <code>FileDialog</code>\ object\ with\ an\ absolute\ file\ path.\n\ The\ open\ file\ is\ passed\ to\ the\ <code>writeItemReservationData()</code>\ as\ parameter.\n
comment28.params=fileName
comment28.target=void\ writeItemReservationData(java.lang.String)
comment28.text=\n\ Writes\ item\ reservation\ data\ to\ a\ file\n\ \n\ @parem\ \ <code>fileName</code>\ a\ <code>String</code>\ the\ name\ of\n\ \ \ \ \ \ \ \ \ the\ text\ file\ in\ which\ the\ data\ will\ be\ stored.\n\ \ \ \ \ \ \ \ \ \n\ @catch\ FileNotFoundException\n
comment29.params=
comment29.target=void\ readItemData()
comment29.text=\n\ Opens\ <code>fileName</code>\ a\ <code>FileDialog</code>\ object\ with\ an\ absolute\ file\ path.\n\ The\ open\ file\ is\ passed\ to\ the\ <code>readItemData()</code>\ as\ parameter.\n
comment3.params=itemID\ customerID\ startDate\ noOfDays
comment3.target=boolean\ makeItemReservation(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment3.text=\nMethod\ check\ if\ all\ parameters\ are\ valid.\ If\ so\ generates\ new\ reservation\ id\ creates\ new\ object\ from\ <code>ShopItemReservation</code>\nand\ by\ call\ to\ <code>storeItemReservation</code>\ store\ in\ the\ <code>itemReservationMap</code>\ and\ <code>dayInDiaryMap</code>\ncreates\ new\ obj\n\n\ @param\ \ \ <code>itemID</code>\ an\ <code>String</code>\ should\ exist\ in\ itemMap\n\ @param\ \ \ <code>customerID</code>\ an\ <code>String</code>\ should\ exist\ in\ customerMap\n\ @param\ \ \ <code>startDate</code>\ an\ <code>String</code>\ date\ of\ the\ hire\n\ @param\ \ \ <code>noOfDays</code>\ an\ <code>Integer</code>\ duration\ of\ hire\n
comment30.params=fileName
comment30.target=void\ readItemData(java.lang.String)
comment30.text=\n\ Reads\ data\ from\ a\ file\ and\ adds\ corresponding\ item\ values\ to\ itemMap.\n\ The\ first\ scanner\ reads\ a\ line\ from\ a\ file\ and\ assigning\ it\ to\ a\ string.\ This\ string\ \n\ is\ then\ passed\ to\ the\ second\ scanner\ where\ the\ is\ passed\ to\ the\ ShopItem\ object\ and\ \n\ broken\ into\ tokens,\ assigned\ to\ the\ corresponding\ fields\ and\ added\ to\ the\ itemMap.\n\ \n\ Uses\ try/catch\ instead\ of\ throwing\ the\ Exception\n\n\ @param\ \ \ <code>filePath</code>\ a\ <code>String</code>,\ file\ object\ in\ which\ the\ loaded\ data\ is\ hold.\n\ \n
comment31.params=
comment31.target=void\ readCustomerData()
comment31.text=\n\ Opens\ <code>fileName</code>\ a\ <code>FileDialog</code>\ object\ with\ an\ absolute\ file\ path.\n\ The\ open\ file\ is\ passed\ to\ the\ <code>readCustomerData()</code>\ as\ parameter.\n
comment32.params=fileName
comment32.target=void\ readCustomerData(java.lang.String)
comment32.text=\n\ Reads\ data\ from\ a\ file\ and\ adds\ corresponding\ item\ values\ to\ customerMap.\n\ The\ first\ scanner\ reads\ a\ line\ from\ a\ file\ and\ assigning\ each\ it\ to\ a\ string.\ This\ string\ \n\ is\ then\ passed\ to\ the\ second\ scanner\ where\ the\ string\ is\ passed\ to\ the\ Customer\ object\ and\ \n\ broken\ into\ tokens,\ assigned\ to\ the\ corresponding\ fields\ and\ added\ to\ the\ customerMap.\n\ \n\ Uses\ try/catch\ instead\ of\ throwing\ the\ Exception\n\n\ @param\ \ \ <code>fileName</code>\ a\ <code>String</code>,\ file\ object\ in\ which\ the\ loaded\ data\ is\ hold.\n\ \n
comment33.params=
comment33.target=void\ readItemReservationData()
comment33.text=\n\ Opens\ <code>fileName</code>\ a\ <code>FileDialog</code>\ object\ with\ an\ absolute\ file\ path\n\ The\ open\ file\ is\ passed\ to\ the\ <code>readItemReservationData()</code>\ as\ parameter.\n
comment34.params=fileName
comment34.target=void\ readItemReservationData(java.lang.String)
comment34.text=\n\ Reads\ data\ from\ a\ file\ and\ adds\ corresponding\ item\ values\ to\ itemReservationMap.\n\ The\ first\ scanner\ reads\ a\ line\ from\ a\ file\ and\ assigning\ it\ to\ a\ string.\ This\ string\ \n\ is\ then\ passed\ to\ the\ second\ scanner\ where\ the\ is\ passed\ to\ the\ ShopItemReservation\ \n\ object\ and\ broken\ into\ tokens,\ assigned\ to\ the\ corresponding\ fields\ and\ added\ to\ the\ \n\ itemReservationMap.\n\ \n\ Uses\ try/catch\ instead\ of\ throwing\ the\ Exception\n\n\ @param\ \ \ <code>fileName</code>\ a\ <code>String</code>,\ file\ object\ in\ which\ the\ loaded\ data\ is\ hold.\n\ \n
comment4.params=
comment4.target=int\ getNumberOfItems()
comment4.text=\n\ Returns\ the\ size\ of\ the\ <code>itemMap</code>\ of\ <code>ShopItem</code>\ objects.\n
comment5.params=
comment5.target=int\ getNumberOfCustomers()
comment5.text=\n\ Returns\ the\ size\ of\ the\ <code>customerMap</code>\ of\ <code>Customer</code>\ objects.\n
comment6.params=
comment6.target=int\ getNumberOfReservations()
comment6.text=\n\ Returns\ the\ size\ of\ the\ <code>itemReservationMap</code>\ of\ <code>ShopItemReservation</code>\ objects.\n
comment7.params=item
comment7.target=void\ storeItem(ShopItem)
comment7.text=\n\ Adds\ an\ item\ to\ the\ itemMap\n\n\ @param\ \ \ <code>item</code>\ an\ <code>ShopItem</code>\ object,\ the\ \n\ item\ to\ be\ added\n
comment8.params=customer
comment8.target=void\ storeCustomer(Customer)
comment8.text=\n\ Adds\ an\ customer\ to\ the\ customerMap\n\n\ @param\ \ \ <code>customer</code>\ an\ <code>Customer</code>\ object,\ the\ \n\ customer\ to\ be\ added\n
comment9.params=itemReservation
comment9.target=void\ storeItemReservation(ShopItemReservation)
comment9.text=\n\ Adds\ an\ item\ reservation\ to\ the\ itemReservationMap\n\n\ @param\ \ \ <code>itemReservation</code>\ an\ <code>ShopItemReservation</code>\ object,\ the\ \n\ item\ reservation\ to\ be\ added\n
numComments=35
